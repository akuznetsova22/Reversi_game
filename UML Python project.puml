@startuml
class GameController{
    view: GameView
    model: Game
    run_game()
    save_winner()
    end_game()
}
class Board{
    size: int
    get_cell()
    update_cell()
    copy_board()

}
class Game{
    board_size: int
    initialize_board()
    change_player()
    make_move()
    select_move_serious_AI()
    minimax()
    get_available_moves()
    select_best_move()
    show_moves()
    is_terminated()
    keep_score()
    weighted_scores()
    calculate_utility()
    calculate_utility_easy_mode()
    check_winner()
}
class Moves{
    board: Board
    curr_player: Player
    is_valid_coordinates()
    is_valid_move()
}
enum HumanPlayer{
}
enum AIPlayer{
}

class BoardConsoleView{
    board: Board
    draw_board()
}

abstract class BoardView{
    board: Board
    draw_board()
}

class GameConsoleView{
    game: Game
    get_move()
    no_moves()
    display_invalid_move()
    display_options()
    draw_board()
    display_winner()
    menu()
    display_computer_move()
    display_scores()
}

abstract class GameView{
    game: Game
    get_move()
    display_computer_move()
    no_moves()
    display_invalid_move()
    display_options()
    draw_board()
    display_winner()
    menu()
    display_scores()
}
Game *-- HumanPlayer
Game *-- AIPlayer
Game *-- Board
Game *-- Moves
Moves *-- Board
Moves *-- HumanPlayer
Moves *--AIPlayer
BoardView *-- Board
GameView *-- Game
BoardConsoleView *-- Board
BoardConsoleView *--HumanPlayer
BoardConsoleView *-- AIPlayer
BoardConsoleView <|--BoardView
GameConsoleView *-- BoardConsoleView
GameConsoleView *-- Game
GameConsoleView <|-- GameView

GameController *-- Game
GameController *-- GameView

@enduml

